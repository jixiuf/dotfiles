# work with iterm "tmux new -A -s sessionname"
# reattach-to-user-namespace 默认没有安装 ，tmux new-session -A -s default运行后若没有自动打开一个窗口，则可能是此插件未安装之故
# set-option -g default-shell $SHELL

# xterm-256color/screen-256color 无法支持ctrl-;等键
# https://github.com/tmux/tmux/issues/3335
# https://github.com/tmux/tmux/wiki/Modifier-Keys#extended-keys

# screen-256color 打开emacsclient 不慢，xterm/tmux 的都慢
# https://bbs.archlinux.org/viewtopic.php?pid=892270
set -g default-terminal "screen-256color"

# 24-bit color
set -as terminal-features ",screen*:RGB"
set -as terminal-features ",tmux*:RGB"
set -g mouse on
set -s extended-keys on
# set -as terminal-features 'xterm*:extkeys'


# bind-key m set-option -g mouse \; display "Mouse: #{?mouse,ON,OFF}"
set -g update-environment 'XDG_CURRENT_DESKTOP XDG_SESSION_DESKTOP XDG_RUNTIME_DIR DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID TERM'
# set -g allow-passthrough on
# bind-key -T root M-k select-pane -U
# bind-key -T root M-j select-pane -D
# bind-key -T root M-h select-pane -L
# bind-key -T root M-l select-pane -R
# bind-key -T root M-n next-window
# bind-key -T root M-p previous-window
# bind-key -T root M-t new-window
# Edit configuration and reload
# bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"
bind 3 split-window -h -c "#{pane_current_path}"
bind 2 split-window -v -c "#{pane_current_path}"

 #iterm 里设置 这个命令 tmux new-session -A -s default
 # - tmux
 #  tmux attach
 #  C-bd  退出
 #  C-b0 C-b1 C-b2  切tag
  # C-bc 新建tag
  #C-b, rename window
  #C-bs list session
  #C-b[ 进入select模式， 可以移动光标(C-nC-p)
  

set -g  prefix2 "C-w"
set -g prefix C-w
unbind-key C-b
bind-key C-w send-prefix
# bind-key -n C-t detach-client   #-n without prefix C-t 退出tmux
# # Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1
    
     
# window renumbering
set -g renumber-windows on
# # better resizing
# setw -g aggressive-resize on

# don't wait for esc/meta-key sequence
# set -sg escape-time 0
  
setw -g mode-keys vi

# 按下 prefix-v 进入copy-mode
# C-bv
# 空格开始选中
bind v copy-mode                #with prefix C-b

# halfpage-up
# bind-key -n 'M-v' copy-mode -u
# bind-key -n 'C-v' copy-mode -u

# edit scrollback with my EDITOR
# file=$PWD/$(mktemp *pager-XXXXXX*)
# tmux capture-pane -e -p -S- -E-   > $file
# tmux new-window -n:edit-scrollback "emacsclient -t $file;rm $file"
bind-key C-e run-shell "tmux-edit-scrollback"

# prefix +k kill window
bind-key k kill-window
bind-key C-w choose-tree
# prefix+C-y paste from primary
bind-key C-y run "wl-paste --primary -n | tmux load-buffer - ; tmux paste-buffer"
# bind-key -T copy-mode y send-keys -X copy-pipe-and-cancel "wl-copy && wl-paste -n | wl-copy -p"

# bind-key -n 'M-v' run-shell "tmux-edit-scrollback"
bind -T copy-mode-vi 'C-v' send-keys Pagedown 
bind -T copy-mode-vi 'M-v' send-keys Pageup
# bind -t vi-copy 'C-v' page-down
# bind -t vi-copy 'M-v' page-up
# list all
# tmux -f /dev/null list-keys -T copy-mode-vi

# # 在copy mode 下 开始选技区域，
# bind -t vi-copy 'y' copy-selection
# infocmp -1x $TERM|grep Ms 
#  For tmux 3.2 or later
# set -as terminal-features ',xterm*:clipboard' #-a means to append to the option
# set -as terminal-features ',screen*:clipboard'
set -ga terminal-overrides ',xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007'
set -ga terminal-overrides ',screen*:XT:Ms=\E]52;%p1%s;%p2%s\007'
set-option -ga terminal-overrides ",256col:Tc"


# https://github.com/tmux/tmux/wiki/Clipboard
#  tmux show -s set-clipboard
# set -g set-clipboard on         #osc 52 copy paste share with iterm
set -s set-clipboard on         #osc 52 copy paste share with iterm
# bind -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "pbcopy; tmux paste-buffer"
bind-key -T copy-mode-vi 'v' send -X begin-selection #default space
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'p' send -X cancel\; paste-buffer
bind-key -T copy-mode-vi 'a' send -X cancel
# bind P paste-buffer             #C-bP
bind 'M-y' choose-buffer
bind 'C-p' choose-buffer

# bind -t emacs-copy 'p' scroll-up
# bind -t emacs-copy 'n' scroll-down
# bind -t emacs-copy 'k' scroll-up
# bind -t emacs-copy 'j' scroll-down
# bind -t emacs-copy 'v' begin-selection
# bind -t emacs-copy 'y' copy-selection

set -g history-limit 99999

# setenv -g PATH "$HOME/bin:$PATH"

set-option -g automatic-rename on
set-option -g automatic-rename-format "#{?#{==:#{pane_current_command},bash},#{b:pane_current_path},#{pane_current_command}}"
set-option -g status-interval 1

set -g set-titles on
# https://github.com/tmux/tmux/wiki/Advanced-Use#pane-titles-and-the-terminal-title
# set -g set-titles-string 'TMUX:#(pwd)'
set -g set-titles-string 'TMUX:#{session_name}:#{pane_title}'
# set -g set-titles-string "#T" # panel_title
# https://www.reddit.com/r/tmux/comments/oboqec/setting_window_title_from_tmux/
# tmux set set-titles-string "┃ hello ┃"
# https://github.com/mbenford/zsh-tmux-auto-title/blob/master/zsh-tmux-auto-title.plugin.zsh

# set-hook -g after-select-window 'set-option -g set-titles-string "TMUX:#{pane_current_path}"'
# set-hook -g pane-exited   'set-option -g set-titles-string "TMUX:#{pane_current_path}"'
# set-hook -g after-select-pane 'set-option -g set-titles-string "TMUX:#{pane_current_path}"'
# set-hook -g pane-focus-in  'set-option -g set-titles-string "TMUX:#{pane_current_path}"'
# set-hook -g client-focus-in  'run-shell tmux-title'
# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# window tag on top not bottom
# set-option -g status-position bottom
set-option -g status-position top
# tmux set-option status off
set-option -g status on
set-option -g status-interval 1
# set-option -g status-justify centre
set-option -g status-keys vi
set-option -g status-style fg=color214,bg=colour237
set-option -g status-left-length 20
set-option -g status-left-style default
set-option -g status-left "#[fg=green]#H #[fg=black]•"
set-option -g status-right-length 140
set-option -g status-right-style fg=green
# set-option -g status-right "#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) "
# set-option -ag status-right "#[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') "
# set-option -ag status-right " #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d"
set-window-option -g window-status-style fg=colour244
set-window-option -g window-status-style bg=default
set-window-option -g window-status-current-style fg=colour166
set-window-option -g window-status-current-style bg=default
