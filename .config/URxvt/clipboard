#! /usr/bin/perl
#这里做了两件事，一是把selection 复制到primary ,及clipboard 内
#二是字义了copy paste 两个事件 ，可以键绑定
#用法在.Xdefaults 里
#指定perl 文件的存放在，需要把本文件复制到此目录下或者/usr/lib/uxrvt/perl/
#URxvt.perl-lib: /home/jixiuf/.config/URxvt/
#然后将本文件名加入到这里,此处本文件名为clipboard 
#URxvt.perl-ext-common:clipboard

#Shift-Control-c copy 到clipboard  大写的C 表示Shift-c
# URxvt.keysym.Control-C: perl:clipboard:copy 
#Shift-Control-v paste clipboard 的内容
# URxvt.keysym.Control-V: perl:clipboard:paste


#当有内容选中的时候调用
#把selection 复制到primary ,及clipboard 内
sub on_sel_grab {
	my $query = quotemeta $_[0]->selection;
	$query =~ s/\n/\\n/g;
	$query =~ s/\r/\\r/g;
	system( "echo -en " . $query . " | xsel -i -b -p" );
}

sub copy {
   my ($self) = @_;
   my $pid = open( pout, "| xsel -i -b" ) or die "fork";
   print pout $self->selection;
   close(pout) or die "close";
}

sub paste {
   my ($self) = @_;
   my $content = `xsel -o -b` ;
   $self->tt_write ($content);
}

sub paste_escaped {
	my ($self) = @_;

	my $str = `xsel -o -b`;
	if ($? == 0) {
		$str =~ tr/\n/\r/;
		$str =~ s/([!#\$%&\*\(\) ='"\\\|\[\]`~,<>\?])/\\\1/g;
		$self->tt_write($str);
	} else {
		print STDERR "Error running xsel: $!\n";
	}

	()
}

sub on_user_command {
   my ($self, $cmd) = @_;
   if ($cmd eq "clipboard:copy") {
      $self->copy;
   }
   if ($cmd eq "clipboard:paste") {
      $self->paste;
   }
   if ($cmd eq "clipboard:paste_escaped") {
       $self->paste_escaped;
   }
   
}


